R.version
install.packages("languageserver")
R.home("bin")
setwd("C:/Users/Anis/Desktop/shinyapp/shiny_data_analysis")
shiny::runApp()
runApp()
runApp()
runApp()
<<<<<<< HEAD
install.packages("DMwR")
runApp()
install.packages( "Path/To/DMwR_0.4.1.tar.gz", repos=NULL, type="source" )
remotes::install_github("cran/DMwR")
install.packages("remotes")
remotes::install_github("cran/DMwR")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages("smotefamily")
runApp()
runApp()
runApp()
runApp()
install.packages("DMwR2")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages("shinyalert")
runApp()
runApp()
install.packages(shinyjs)
install.packages("shinyjs")
runApp()
runApp()
=======
git status
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
install.packages("shinyWidgets")
shiny::runApp()
install.packages("plotly")
shiny::runApp()
install.packages("shinyalert")
shiny::runApp()
install.packages("shinyalert")
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
>>>>>>> 5fac73372ca0fef3c04eb274bf3b8fea92ac2971
